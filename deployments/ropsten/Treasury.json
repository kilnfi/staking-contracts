{
  "address": "0x65D24827C10008C4F7aF7c244b755ddC98E5B4cA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "_beneficiaries",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_percents",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "InvalidAmount",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidArrayLengths",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidEmptyArray",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InvalidPercents",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Locked",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "err",
          "type": "bytes"
        }
      ],
      "name": "TransferError",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Unauthorized",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "beneficiaries",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "percents",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_beneficiaries",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "_percents",
          "type": "uint256[]"
        }
      ],
      "name": "setBeneficiaries",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf18621c685d67c9546a5262cbd0c12de0a8232ca4f57000d87f9e488f48be556",
  "receipt": {
    "to": null,
    "from": "0x92D7d6DADe15fcF369534cEb8CD1A27f97185ab3",
    "contractAddress": "0x65D24827C10008C4F7aF7c244b755ddC98E5B4cA",
    "transactionIndex": 19,
    "gasUsed": "670995",
    "logsBloom": "0x
    "blockHash": "0xb2465afdea10c46a0b12423030d2300b73173fd8dfa832a6d006312b729c23de",
    "transactionHash": "0xf18621c685d67c9546a5262cbd0c12de0a8232ca4f57000d87f9e488f48be556",
    "logs": [],
    "blockNumber": 12552034,
    "cumulativeGasUsed": "8100991",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8039f91Ce95F9DE56ab607a20fD27830Ab3A5813",
    [
      "0xd13E4bF0d8b793e00977aC7Cf19800faC7A97fc8",
      "0x5137B5540730d44326fBb237184425A9FB311DdF"
    ],
    [
      8750,
      1250
    ]
  ],
  "numDeployments": 1,
  "solcInputHash": "d7bfc0beb09a5ebd6126438f6b65ab12",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_beneficiaries\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_percents\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidArrayLengths\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidEmptyArray\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidPercents\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Locked\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"err\",\"type\":\"bytes\"}],\"name\":\"TransferError\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"beneficiaries\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"percents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_beneficiaries\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_percents\",\"type\":\"uint256[]\"}],\"name\":\"setBeneficiaries\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Kiln\",\"kind\":\"dev\",\"methods\":{\"setBeneficiaries(address[],uint256[])\":{\"params\":{\"_beneficiaries\":\"The list of beneficiaries to withdraw the funds to\",\"_percents\":\"The list of percents to use for the splitting\"}},\"withdraw(uint256)\":{\"params\":{\"_amount\":\"Amount to split between beneficiaries\"}}},\"title\":\"Minimal Permissioned Treasury\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setBeneficiaries(address[],uint256[])\":{\"notice\":\"Sets the splitting parameters for the withdrawal\"},\"withdraw(uint256)\":{\"notice\":\"Withdraws the current balance based on the provided percents, expected in basis point.If the sum is greater than 10_000, transfers will end up failing\"}},\"notice\":\"You can use this contract to store funds and split them on a permissioned call\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/Treasury.sol\":\"Treasury\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src/contracts/Treasury.sol\":{\"content\":\"//SPDX-License-Identifier: BUSL-1.1\\npragma solidity >=0.8.10;\\n\\n/// @title Minimal Permissioned Treasury\\n/// @author Kiln\\n/// @notice You can use this contract to store funds and split them on a permissioned call\\ncontract Treasury {\\n    error InvalidCall();\\n    error InvalidArrayLengths();\\n    error InvalidEmptyArray();\\n    error Unauthorized();\\n    error TransferError(bytes err);\\n    error InvalidAmount();\\n    error Locked();\\n    error InvalidPercents();\\n\\n    uint256 constant BASIS_POINT = 10_000;\\n\\n    address public admin;\\n    address[] public beneficiaries;\\n    uint256[] public percents;\\n    uint256 internal locked = 1;\\n\\n    constructor(\\n        address _admin,\\n        address[] memory _beneficiaries,\\n        uint256[] memory _percents\\n    ) {\\n        if (_beneficiaries.length != _percents.length) {\\n            revert InvalidArrayLengths();\\n        }\\n\\n        if (_beneficiaries.length == 0) {\\n            revert InvalidEmptyArray();\\n        }\\n\\n        _checkPercents(_percents);\\n\\n        admin = _admin;\\n        beneficiaries = _beneficiaries;\\n        percents = _percents;\\n    }\\n\\n    modifier onlyAdmin() {\\n        if (msg.sender != admin) {\\n            revert Unauthorized();\\n        }\\n        _;\\n    }\\n\\n    modifier lock() {\\n        if (locked == 2) {\\n            revert Locked();\\n        }\\n        locked = 2;\\n        _;\\n        locked = 1;\\n    }\\n\\n    /// @notice Sets the splitting parameters for the withdrawal\\n    /// @param _beneficiaries The list of beneficiaries to withdraw the funds to\\n    /// @param _percents The list of percents to use for the splitting\\n    function setBeneficiaries(address[] memory _beneficiaries, uint256[] memory _percents) external onlyAdmin {\\n        if (_beneficiaries.length != _percents.length) {\\n            revert InvalidArrayLengths();\\n        }\\n\\n        if (_beneficiaries.length == 0) {\\n            revert InvalidEmptyArray();\\n        }\\n\\n        _checkPercents(_percents);\\n\\n        beneficiaries = _beneficiaries;\\n        percents = _percents;\\n    }\\n\\n    /// @notice Withdraws the current balance based on the provided percents, expected in basis point.\\n    /// @notice If the sum is greater than 10_000, transfers will end up failing\\n    /// @param _amount Amount to split between beneficiaries\\n    function withdraw(uint256 _amount) external onlyAdmin lock {\\n        if (_amount > address(this).balance) {\\n            revert InvalidAmount();\\n        }\\n\\n        for (uint256 idx = 0; idx < beneficiaries.length; ++idx) {\\n            uint256 amountToTransfer = (_amount * percents[idx]) / BASIS_POINT;\\n            (bool status, bytes memory data) = beneficiaries[idx].call{value: amountToTransfer}(\\\"\\\");\\n            if (!status) {\\n                revert TransferError(data);\\n            }\\n        }\\n    }\\n\\n    /// @notice Empty receiver\\n    receive() external payable {}\\n\\n    /// @notice Fallback prevention\\n    fallback() external payable {\\n        revert InvalidCall();\\n    }\\n\\n    /// @notice Checks that the sum of percents is equal to 10_000 (100 %)\\n    /// @param _percents List of percents\\n    function _checkPercents(uint256[] memory _percents) internal pure {\\n        uint256 sum;\\n        for (uint256 idx = 0; idx < _percents.length; ) {\\n            sum += _percents[idx];\\n            unchecked {\\n                ++idx;\\n            }\\n        }\\n        if (sum != BASIS_POINT) {\\n            revert InvalidPercents();\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfc116ea3fa05667a1b7ffd340e7e66606c747d5ed80fca80bd904a5be4605408\",\"license\":\"BUSL-1.1\"}},\"version\":1}",
  "bytecode": "0x608060405260016003553480156200001657600080fd5b5060405162000bd038038062000bd0833981016040819052620000399162000303565b80518251146200005c5760405163a9854bc960e01b815260040160405180910390fd5b81516000036200007f57604051637b329aa360e01b815260040160405180910390fd5b6200008a81620000da565b600080546001600160a01b0319166001600160a01b0385161790558151620000ba90600190602085019062000145565b508051620000d0906002906020840190620001af565b5050505062000424565b6000805b82518110156200011d57828181518110620000fd57620000fd620003e7565b602002602001015182620001129190620003fd565b9150600101620000de565b50612710811462000141576040516302757d1360e41b815260040160405180910390fd5b5050565b8280548282559060005260206000209081019282156200019d579160200282015b828111156200019d57825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019062000166565b50620001ab929150620001ed565b5090565b8280548282559060005260206000209081019282156200019d579160200282015b828111156200019d578251825591602001919060010190620001d0565b5b80821115620001ab5760008155600101620001ee565b80516001600160a01b03811681146200021c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000262576200026262000221565b604052919050565b60006001600160401b0382111562000286576200028662000221565b5060051b60200190565b600082601f830112620002a257600080fd5b81516020620002bb620002b5836200026a565b62000237565b82815260059290921b84018101918181019086841115620002db57600080fd5b8286015b84811015620002f85780518352918301918301620002df565b509695505050505050565b6000806000606084860312156200031957600080fd5b620003248462000204565b602085810151919450906001600160401b03808211156200034457600080fd5b818701915087601f8301126200035957600080fd5b81516200036a620002b5826200026a565b81815260059190911b8301840190848101908a8311156200038a57600080fd5b938501935b82851015620003b357620003a38562000204565b825293850193908501906200038f565b60408a01519097509450505080831115620003cd57600080fd5b5050620003dd8682870162000290565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b600082198211156200041f57634e487b7160e01b600052601160045260246000fd5b500190565b61079c80620004346000396000f3fe60806040526004361061004e5760003560e01c8063065dc4c11461006e5780632e1a7d4d146100905780638db1342d146100b0578063efeb5e58146100e3578063f851a4401461011b57610055565b3661005557005b60405163574b16a760e11b815260040160405180910390fd5b34801561007a57600080fd5b5061008e61008936600461058b565b61013b565b005b34801561009c57600080fd5b5061008e6100ab36600461065a565b6101de565b3480156100bc57600080fd5b506100d06100cb36600461065a565b610352565b6040519081526020015b60405180910390f35b3480156100ef57600080fd5b506101036100fe36600461065a565b610373565b6040516001600160a01b0390911681526020016100da565b34801561012757600080fd5b50600054610103906001600160a01b031681565b6000546001600160a01b03163314610165576040516282b42960e81b815260040160405180910390fd5b80518251146101875760405163a9854bc960e01b815260040160405180910390fd5b81516000036101a957604051637b329aa360e01b815260040160405180910390fd5b6101b28161039d565b81516101c5906001906020850190610400565b5080516101d9906002906020840190610465565b505050565b6000546001600160a01b03163314610208576040516282b42960e81b815260040160405180910390fd5b60035460020361022b576040516303cb96db60e21b815260040160405180910390fd5b6002600355478111156102515760405163162908e360e11b815260040160405180910390fd5b60005b6001548110156103495760006127106002838154811061027657610276610673565b90600052602060002001548461028c919061069f565b61029691906106be565b9050600080600184815481106102ae576102ae610673565b60009182526020822001546040516001600160a01b039091169185919081818185875af1925050503d8060008114610302576040519150601f19603f3d011682016040523d82523d6000602084013e610307565b606091505b5091509150816103355780604051630e21c0d360e01b815260040161032c91906106e0565b60405180910390fd5b5050508061034290610735565b9050610254565b50506001600355565b6002818154811061036257600080fd5b600091825260209091200154905081565b6001818154811061038357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000805b82518110156103d9578281815181106103bc576103bc610673565b6020026020010151826103cf919061074e565b91506001016103a1565b5061271081146103fc576040516302757d1360e41b815260040160405180910390fd5b5050565b828054828255906000526020600020908101928215610455579160200282015b8281111561045557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610420565b506104619291506104a0565b5090565b828054828255906000526020600020908101928215610455579160200282015b82811115610455578251825591602001919060010190610485565b5b8082111561046157600081556001016104a1565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104f4576104f46104b5565b604052919050565b600067ffffffffffffffff821115610516576105166104b5565b5060051b60200190565b600082601f83011261053157600080fd5b81356020610546610541836104fc565b6104cb565b82815260059290921b8401810191818101908684111561056557600080fd5b8286015b848110156105805780358352918301918301610569565b509695505050505050565b6000806040838503121561059e57600080fd5b823567ffffffffffffffff808211156105b657600080fd5b818501915085601f8301126105ca57600080fd5b813560206105da610541836104fc565b82815260059290921b840181019181810190898411156105f957600080fd5b948201945b8386101561062d5785356001600160a01b038116811461061e5760008081fd5b825294820194908201906105fe565b9650508601359250508082111561064357600080fd5b5061065085828601610520565b9150509250929050565b60006020828403121561066c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106b9576106b9610689565b500290565b6000826106db57634e487b7160e01b600052601260045260246000fd5b500490565b600060208083528351808285015260005b8181101561070d578581018301518582016040015282016106f1565b8181111561071f576000604083870101525b50601f01601f1916929092016040019392505050565b60006001820161074757610747610689565b5060010190565b6000821982111561076157610761610689565b50019056fea2646970667358221220d0bb7fbd472937bdf3582dccca262ad8584b1448f886c23c622f3095d2e1a8bf64736f6c634300080d0033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c8063065dc4c11461006e5780632e1a7d4d146100905780638db1342d146100b0578063efeb5e58146100e3578063f851a4401461011b57610055565b3661005557005b60405163574b16a760e11b815260040160405180910390fd5b34801561007a57600080fd5b5061008e61008936600461058b565b61013b565b005b34801561009c57600080fd5b5061008e6100ab36600461065a565b6101de565b3480156100bc57600080fd5b506100d06100cb36600461065a565b610352565b6040519081526020015b60405180910390f35b3480156100ef57600080fd5b506101036100fe36600461065a565b610373565b6040516001600160a01b0390911681526020016100da565b34801561012757600080fd5b50600054610103906001600160a01b031681565b6000546001600160a01b03163314610165576040516282b42960e81b815260040160405180910390fd5b80518251146101875760405163a9854bc960e01b815260040160405180910390fd5b81516000036101a957604051637b329aa360e01b815260040160405180910390fd5b6101b28161039d565b81516101c5906001906020850190610400565b5080516101d9906002906020840190610465565b505050565b6000546001600160a01b03163314610208576040516282b42960e81b815260040160405180910390fd5b60035460020361022b576040516303cb96db60e21b815260040160405180910390fd5b6002600355478111156102515760405163162908e360e11b815260040160405180910390fd5b60005b6001548110156103495760006127106002838154811061027657610276610673565b90600052602060002001548461028c919061069f565b61029691906106be565b9050600080600184815481106102ae576102ae610673565b60009182526020822001546040516001600160a01b039091169185919081818185875af1925050503d8060008114610302576040519150601f19603f3d011682016040523d82523d6000602084013e610307565b606091505b5091509150816103355780604051630e21c0d360e01b815260040161032c91906106e0565b60405180910390fd5b5050508061034290610735565b9050610254565b50506001600355565b6002818154811061036257600080fd5b600091825260209091200154905081565b6001818154811061038357600080fd5b6000918252602090912001546001600160a01b0316905081565b6000805b82518110156103d9578281815181106103bc576103bc610673565b6020026020010151826103cf919061074e565b91506001016103a1565b5061271081146103fc576040516302757d1360e41b815260040160405180910390fd5b5050565b828054828255906000526020600020908101928215610455579160200282015b8281111561045557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610420565b506104619291506104a0565b5090565b828054828255906000526020600020908101928215610455579160200282015b82811115610455578251825591602001919060010190610485565b5b8082111561046157600081556001016104a1565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156104f4576104f46104b5565b604052919050565b600067ffffffffffffffff821115610516576105166104b5565b5060051b60200190565b600082601f83011261053157600080fd5b81356020610546610541836104fc565b6104cb565b82815260059290921b8401810191818101908684111561056557600080fd5b8286015b848110156105805780358352918301918301610569565b509695505050505050565b6000806040838503121561059e57600080fd5b823567ffffffffffffffff808211156105b657600080fd5b818501915085601f8301126105ca57600080fd5b813560206105da610541836104fc565b82815260059290921b840181019181810190898411156105f957600080fd5b948201945b8386101561062d5785356001600160a01b038116811461061e5760008081fd5b825294820194908201906105fe565b9650508601359250508082111561064357600080fd5b5061065085828601610520565b9150509250929050565b60006020828403121561066c57600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106b9576106b9610689565b500290565b6000826106db57634e487b7160e01b600052601260045260246000fd5b500490565b600060208083528351808285015260005b8181101561070d578581018301518582016040015282016106f1565b8181111561071f576000604083870101525b50601f01601f1916929092016040019392505050565b60006001820161074757610747610689565b5060010190565b6000821982111561076157610761610689565b50019056fea2646970667358221220d0bb7fbd472937bdf3582dccca262ad8584b1448f886c23c622f3095d2e1a8bf64736f6c634300080d0033",
  "devdoc": {
    "author": "Kiln",
    "kind": "dev",
    "methods": {
      "setBeneficiaries(address[],uint256[])": {
        "params": {
          "_beneficiaries": "The list of beneficiaries to withdraw the funds to",
          "_percents": "The list of percents to use for the splitting"
        }
      },
      "withdraw(uint256)": {
        "params": {
          "_amount": "Amount to split between beneficiaries"
        }
      }
    },
    "title": "Minimal Permissioned Treasury",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "setBeneficiaries(address[],uint256[])": {
        "notice": "Sets the splitting parameters for the withdrawal"
      },
      "withdraw(uint256)": {
        "notice": "Withdraws the current balance based on the provided percents, expected in basis point.If the sum is greater than 10_000, transfers will end up failing"
      }
    },
    "notice": "You can use this contract to store funds and split them on a permissioned call",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 25,
        "contract": "src/contracts/Treasury.sol:Treasury",
        "label": "admin",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 28,
        "contract": "src/contracts/Treasury.sol:Treasury",
        "label": "beneficiaries",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 31,
        "contract": "src/contracts/Treasury.sol:Treasury",
        "label": "percents",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_uint256)dyn_storage"
      },
      {
        "astId": 34,
        "contract": "src/contracts/Treasury.sol:Treasury",
        "label": "locked",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}